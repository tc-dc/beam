/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: org.apache.beam.gradle.BeamModulePlugin
applyPortabilityNature()

description = "Apache Beam :: Model :: Fn Execution"
ext.summary = "Portable definitions for execution user-defined functions."

dependencies {
  // We purposely depend on the unshaded classes for protobuf compilation and
  // export the shaded variant as the actual runtime dependency.
  protobuf project(path: ":beam-model-pipeline", configuration: "unshaded")
  runtime project(path: ":beam-model-pipeline", configuration: "shadow")
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

publishing {
    publications {
        shadow(MavenPublication) { publication ->
          groupId = "${projectGroupName}"
          artifactId = "${project.name}"
          version = "${projectVersionName}"
          project.shadow.component(publication)
        }
    }
    repositories {
        maven {
            url  "${artifactory_url}"
            credentials {
                username "${artifactory_username}"
                password "${artifactory_password}"
            }
        }
    }
}

shadowJar {
    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForShadowPublication }
        rename ".*", "pom.xml"
    }
    classifier = ''
    configurations = [project.configurations.compile]
}